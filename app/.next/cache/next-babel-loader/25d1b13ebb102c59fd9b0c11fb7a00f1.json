{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\nimport { Card, CardContent, makeStyles } from '@material-ui/core';\n\nconst Triboo = ({\n  selected,\n  switchTriboo,\n  triboo\n}) => {\n  const triboos = triboo.map((item, index) => __jsx(ToggleButton, {\n    key: index,\n    value: item\n  }, item));\n  return __jsx(ToggleButtonGroup, {\n    exclusive: true,\n    onChange: (e, value) => value !== null ? switchTriboo(value) : null,\n    size: \"large\",\n    value: selected\n  }, triboos);\n};\n\nconst SampleData = ({\n  selected,\n  data\n}) => {\n  const sample = data.filter(item => item.triboo === selected).map((item, index) => __jsx(Card, {\n    key: index,\n    raised: true,\n    style: {\n      width: 500,\n      margin: 15\n    }\n  }, __jsx(CardContent, null, __jsx(\"h2\", null, item.title), __jsx(\"h5\", null, selected), __jsx(\"p\", null, item.body))));\n  const sampleBox = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: 1050,\n    margin: 'auto'\n  };\n  return __jsx(\"div\", {\n    style: sampleBox\n  }, sample);\n};\n\nconst Home = ({\n  data\n}) => {\n  const {\n    0: tribooSelected,\n    1: setTribooSelected\n  } = useState('commercial');\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Join your triboo.\"), __jsx(Triboo, {\n    selected: tribooSelected,\n    switchTriboo: setTribooSelected,\n    triboo: data.triboo\n  }), __jsx(SampleData, {\n    selected: tribooSelected,\n    data: data.sample\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hugopapier/Documents/jobTriboo/app/components/home.js"],"names":["React","useState","useEffect","ToggleButtonGroup","ToggleButton","Card","CardContent","makeStyles","Triboo","selected","switchTriboo","triboo","triboos","map","item","index","e","value","SampleData","data","sample","filter","width","margin","title","body","sampleBox","display","flexWrap","Home","tribooSelected","setTribooSelected"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,kBAAhD;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,QAA8C,mBAA9C;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA;AAA1B,CAAD,KAAwC;AACrD,QAAMC,OAAO,GAAGD,MAAM,CAACE,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiB,MAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,KAAnB;AAA0B,IAAA,KAAK,EAAED;AAAjC,KAAwCA,IAAxC,CAA5B,CAAhB;AACA,SACE,MAAC,iBAAD;AACE,IAAA,SAAS,EAAE,IADb;AAEE,IAAA,QAAQ,EAAE,CAACE,CAAD,EAAIC,KAAJ,KAAeA,KAAK,KAAK,IAAX,GAAmBP,YAAY,CAACO,KAAD,CAA/B,GAAyC,IAFnE;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAER;AAJT,KAMGG,OANH,CADF;AAUD,CAZD;;AAcA,MAAMM,UAAU,GAAG,CAAC;AAAET,EAAAA,QAAF;AAAYU,EAAAA;AAAZ,CAAD,KAAwB;AACzC,QAAMC,MAAM,GAAGD,IAAI,CACFE,MADF,CACUP,IAAD,IAAWA,IAAI,CAACH,MAAL,KAAgBF,QADpC,EAEEI,GAFF,CAEM,CAACC,IAAD,EAAOC,KAAP,KACH,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAkB,IAAA,MAAM,EAAE,IAA1B;AAAgC,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB;AAAvC,KACE,MAAC,WAAD,QACE,kBAAKT,IAAI,CAACU,KAAV,CADF,EAEE,kBAAKf,QAAL,CAFF,EAGE,iBAAIK,IAAI,CAACW,IAAT,CAHF,CADF,CAHH,CAAf;AAYA,QAAMC,SAAS,GAAG;AAChBC,IAAAA,OAAO,EAAE,MADO;AAEhBC,IAAAA,QAAQ,EAAE,MAFM;AAGhBN,IAAAA,KAAK,EAAE,IAHS;AAIhBC,IAAAA,MAAM,EAAE;AAJQ,GAAlB;AAOA,SACE;AAAK,IAAA,KAAK,EAAEG;AAAZ,KACGN,MADH,CADF;AAKD,CAzBD;;AA2BA,MAAMS,IAAI,GAAG,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAc;AACzB,QAAM;AAAA,OAACW,cAAD;AAAA,OAAiBC;AAAjB,MAAsC9B,QAAQ,CAAC,YAAD,CAApD;AAEA,SACE,mBACE,sCADF,EAEE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE6B,cAAlB;AAAkC,IAAA,YAAY,EAAEC,iBAAhD;AAAmE,IAAA,MAAM,EAAEZ,IAAI,CAACR;AAAhF,IAFF,EAGE,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAEmB,cAAtB;AAAsC,IAAA,IAAI,EAAEX,IAAI,CAACC;AAAjD,IAHF,CADF;AAOD,CAVD;;AAWA,eAAeS,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab'\nimport { Card, CardContent, makeStyles } from '@material-ui/core'\n\nconst Triboo = ({ selected, switchTriboo, triboo }) => {\n  const triboos = triboo.map((item, index) => <ToggleButton key={index} value={item}>{item}</ToggleButton>);\n  return (\n    <ToggleButtonGroup\n      exclusive={true}\n      onChange={(e, value) => (value !== null) ? switchTriboo(value) : null}\n      size=\"large\"\n      value={selected}\n    >\n      {triboos}\n    </ToggleButtonGroup>\n  );\n}\n\nconst SampleData = ({ selected, data }) => {\n  const sample = data\n                  .filter((item) => (item.triboo === selected))\n                  .map((item, index) => (\n                    <Card key={index} raised={true} style={{ width: 500, margin: 15 }}>\n                      <CardContent>\n                        <h2>{item.title}</h2>\n                        <h5>{selected}</h5>\n                        <p>{item.body}</p>\n                      </CardContent>\n                    </Card>\n                  ));\n\n  const sampleBox = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: 1050,\n    margin: 'auto'\n  };\n\n  return (\n    <div style={sampleBox}>\n      {sample}\n    </div>\n  );\n}\n\nconst Home = ({ data }) => {\n  const [tribooSelected, setTribooSelected] = useState('commercial');\n\n  return (\n    <div>\n      <h1>Join your triboo.</h1>\n      <Triboo selected={tribooSelected} switchTriboo={setTribooSelected} triboo={data.triboo} />\n      <SampleData selected={tribooSelected} data={data.sample} />\n    </div>\n);\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}