{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nimport { Cookies } from 'react-cookie';\nvar cookie = new Cookies();\nvar serverUrl = \"http://localhost:3001\";\nexport var checkAuth =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var token, tk, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = null; // Server Side\n\n            if (!ctx.req) {\n              _context.next = 10;\n              break;\n            }\n\n            console.log('-> SERVER SIDE AUTH.');\n            tk = ctx.req.headers.cookie.match(/(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/);\n            console.log('tk: ', tk);\n\n            if (!(tk === null)) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 7:\n            token = tk[1];\n            _context.next = 15;\n            break;\n\n          case 10:\n            console.log('-> CLIENT SIDE AUTH.');\n            token = cookie.get('token');\n            console.log('Token: ', token);\n\n            if (!(token === null)) {\n              _context.next = 15;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 15:\n            _context.next = 17;\n            return fetch(serverUrl + \"/api/auth\", {\n              method: \"GET\",\n              headers: {\n                \"Authorization\": token\n              }\n            });\n\n          case 17:\n            res = _context.sent;\n\n            if (!(res.status === 200)) {\n              _context.next = 20;\n              break;\n            }\n\n            return _context.abrupt(\"return\", true);\n\n          case 20:\n            return _context.abrupt(\"return\", false);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function checkAuth(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/hugopapier/Documents/jobTriboo/app/utils/auth.js"],"names":["fetch","Cookies","cookie","serverUrl","checkAuth","ctx","token","req","console","log","tk","headers","match","get","method","res","status"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,IAAMC,MAAM,GAAG,IAAID,OAAJ,EAAf;AACA,IAAME,SAAS,GAAG,uBAAlB;AAEA,OAAO,IAAMC,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,KADmB,GACX,IADW,EAGvB;;AAHuB,iBAInBD,GAAG,CAACE,GAJe;AAAA;AAAA;AAAA;;AAKrBC,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACMC,YAAAA,EANe,GAMVL,GAAG,CAACE,GAAJ,CAAQI,OAAR,CAAgBT,MAAhB,CAAuBU,KAAvB,CAA6B,8CAA7B,CANU;AAOrBJ,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,EAApB;;AAPqB,kBASjBA,EAAE,KAAK,IATU;AAAA;AAAA;AAAA;;AAAA,6CAUZ,KAVY;;AAAA;AAYrBJ,YAAAA,KAAK,GAAGI,EAAE,CAAC,CAAD,CAAV;AAZqB;AAAA;;AAAA;AAgBrBF,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAH,YAAAA,KAAK,GAAGJ,MAAM,CAACW,GAAP,CAAW,OAAX,CAAR;AACAL,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;;AAlBqB,kBAoBjBA,KAAK,KAAK,IApBO;AAAA;AAAA;AAAA;;AAAA,6CAqBZ,KArBY;;AAAA;AAAA;AAAA,mBAwBLN,KAAK,CAACG,SAAS,GAAG,WAAb,EAA0B;AAAEW,cAAAA,MAAM,EAAE,KAAV;AAAiBH,cAAAA,OAAO,EAAE;AAAE,iCAAiBL;AAAnB;AAA1B,aAA1B,CAxBA;;AAAA;AAwBjBS,YAAAA,GAxBiB;;AAAA,kBAyBnBA,GAAG,CAACC,MAAJ,KAAe,GAzBI;AAAA;AAAA;AAAA;;AAAA,6CA0Bd,IA1Bc;;AAAA;AAAA,6CA4BhB,KA5BgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATZ,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { Cookies } from 'react-cookie'\n\nconst cookie = new Cookies();\nconst serverUrl = \"http://localhost:3001\";\n\nexport const checkAuth = async ctx => {\n  let token = null;\n\n  // Server Side\n  if (ctx.req) {\n    console.log('-> SERVER SIDE AUTH.')\n    const tk = ctx.req.headers.cookie.match(/(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/);\n    console.log('tk: ', tk);\n\n    if (tk === null)\n      return false;\n\n    token = tk[1];\n  }\n  // // Client Side \n  else {\n    console.log('-> CLIENT SIDE AUTH.')\n    token = cookie.get('token');\n    console.log('Token: ', token);\n\n    if (token === null)\n      return false;\n  }\n\n  const res = await fetch(serverUrl + \"/api/auth\", { method: \"GET\", headers: { \"Authorization\": token }});\n  if (res.status === 200)\n    return true;\n\n  return false;\n};"]},"metadata":{},"sourceType":"module"}