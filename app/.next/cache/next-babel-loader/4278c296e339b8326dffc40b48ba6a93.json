{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { FormControl, Input, InputLabel, TextField, Button, Select, MenuItem } from '@material-ui/core';\nimport Modal from 'react-modal';\nimport { withTranslation } from './i18n';\nimport { withRouter } from 'next/router';\nimport { useCookies } from 'react-cookie';\nimport { request } from '../utils/request';\nimport LoginTab from '../store/container/login';\nModal.setAppElement(\"#__next\");\n\nconst ModalConnexion = ({\n  t,\n  modalOpen,\n  modalWindowLogin,\n  setModalOpenState,\n  setMWindowLogin,\n  router,\n  storeUserInfo,\n  setLoginState\n}) => {\n  /* State */\n  const {\n    0: birthDateDay,\n    1: setBirthDateDay\n  } = useState(1);\n  const {\n    0: birthDateMonth,\n    1: setBirthDateMonth\n  } = useState(1);\n  const {\n    0: birthDateYear,\n    1: setBirthDateYear\n  } = useState(2019);\n  const {\n    0: status,\n    1: setStatus\n  } = useState(\"candidate\");\n  const {\n    0: validationBtnState,\n    1: setValidationBtnState\n  } = useState(true);\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState('');\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: fieldError,\n    1: setFieldError\n  } = useState(false);\n  const {\n    0: validationStatus,\n    1: setValidationStatus\n  } = useState(0);\n  const [cookies, setCookies, removeCookies] = useCookies();\n  console.log('COOKIES: ', cookies);\n  /* Utils function */\n\n  const getDayList = () => {\n    let dayNumber = 31;\n    if (birthDateMonth % 2 === 0 && birthDateMonth != 8) dayNumber = 30;\n\n    if (birthDateMonth === 2) {\n      if (birthDateYear % 4 === 0) {\n        if (birthDateYear % 100 === 0) {\n          if (birthDateYear % 400 === 0) dayNumber = 29;else dayNumber = 28;\n        } else dayNumber = 29;\n      }\n\n      dayNumber = 28;\n    }\n\n    if (dayNumber < birthDateDay) setBirthDateDay(dayNumber);\n    let dateElements = [];\n\n    for (let i = 1; i <= dayNumber; i++) dateElements.push(__jsx(MenuItem, {\n      key: i,\n      value: i\n    }, i));\n\n    return dateElements;\n  };\n\n  const getMonthList = () => {\n    let monthElement = [];\n\n    for (let i = 1; i <= 12; i++) monthElement.push(__jsx(MenuItem, {\n      key: i,\n      value: i\n    }, i));\n\n    return monthElement;\n  };\n\n  const getYearList = () => {\n    let yearElement = [];\n\n    for (let i = new Date().getFullYear(); i >= 1900; i--) yearElement.push(__jsx(MenuItem, {\n      key: i,\n      value: i\n    }, i));\n\n    return yearElement;\n  };\n\n  const handleValidation = async event => {\n    event.preventDefault();\n    setValidationBtnState(false);\n\n    if (firstName === '' || lastName === '' || email === '' || password === '') {\n      setFieldError(true);\n      setValidationBtnState(true);\n      return;\n    } else {\n      try {\n        const birthDate = new Date(birthDateYear + \"-\" + birthDateMonth + \"-\" + birthDateDay); // .. Start loading front-end process\n\n        const res = await request(\"/api/register\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: {\n            status,\n            firstName,\n            lastName,\n            email,\n            password,\n            birthDate\n          }\n        }); // .. End loading front-end process\n\n        if (res.status === 201) {\n          const data = await res.json();\n          setCookies('token', data.token);\n          storeUserInfo({\n            firstName,\n            lastName,\n            email,\n            password,\n            birthDate\n          });\n          setValidationStatus(201);\n          setValidationBtnState(true);\n          setModalOpenState(false);\n          setLoginState(true);\n          router.push('/settings');\n        } else {\n          setValidationStatus(res.status);\n          setEmail('');\n          setValidationBtnState(true);\n        }\n      } catch (e) {\n        console.log(e);\n        setValidationBtnState(true);\n        setValidationStatus(500);\n      }\n    }\n  };\n  /* Jsx Rendering */\n\n\n  return __jsx(Modal, {\n    isOpen: modalOpen,\n    onRequestClose: () => setModalOpenState(false),\n    style: {\n      overlay: {\n        backgroundColor: \"rgba(0, 0, 0, 0.6)\"\n      },\n      content: {\n        opacity: \"1\",\n        width: '700px',\n        margin: 'auto'\n      }\n    }\n  }, __jsx(Button, {\n    variant: !modalWindowLogin ? \"outlined\" : \"contained\",\n    onClick: () => setMWindowLogin(true),\n    style: {\n      margin: 5\n    },\n    color: \"primary\"\n  }, t('login')), __jsx(Button, {\n    variant: !modalWindowLogin ? \"contained\" : \"outlined\",\n    onClick: () => setMWindowLogin(false),\n    style: {\n      margin: 5\n    },\n    color: \"primary\"\n  }, t('register')), __jsx(\"hr\", null), modalWindowLogin ? __jsx(LoginTab, null) : __jsx(\"form\", {\n    onSubmit: handleValidation\n  }, __jsx(\"div\", null, __jsx(Button, {\n    variant: status !== \"candidate\" ? \"outlined\" : \"contained\",\n    color: \"secondary\",\n    onClick: () => setStatus(\"candidate\"),\n    style: {\n      margin: 5\n    }\n  }, t('candidate')), __jsx(Button, {\n    variant: status !== \"recruiter\" ? \"outlined\" : \"contained\",\n    color: \"secondary\",\n    onClick: () => setStatus(\"recruiter\"),\n    style: {\n      margin: 5\n    }\n  }, t('recruiter'))), __jsx(\"div\", null, __jsx(TextField, {\n    label: t('firstName'),\n    type: \"text\",\n    name: \"firstName\",\n    variant: \"filled\",\n    style: {\n      margin: 5\n    },\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    error: fieldError && firstName === ''\n  }), __jsx(TextField, {\n    label: t('lastName'),\n    type: \"text\",\n    name: \"lastName\",\n    variant: \"filled\",\n    style: {\n      margin: 5\n    },\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    error: fieldError && lastName === ''\n  })), __jsx(\"div\", null, __jsx(TextField, {\n    label: t('email'),\n    type: \"email\",\n    name: \"email\",\n    variant: \"filled\",\n    autoComplete: \"email\",\n    style: {\n      margin: 5\n    },\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    error: fieldError && email === ''\n  }), __jsx(TextField, {\n    label: t('password'),\n    type: \"password\",\n    name: \"password\",\n    variant: \"filled\",\n    value: password,\n    autoComplete: \"new-password\",\n    style: {\n      margin: 5\n    },\n    onChange: e => setPassword(e.target.value),\n    error: fieldError && password === ''\n  })), __jsx(\"div\", {\n    style: {\n      margin: \"5px 0px\"\n    }\n  }, __jsx(FormControl, null, __jsx(InputLabel, {\n    htmlFor: \"age-customized-select\",\n    style: {\n      margin: \"0px 5px\"\n    }\n  }, t('birthDateDay')), __jsx(Select, {\n    value: birthDateDay,\n    onChange: e => setBirthDateDay(e.target.value),\n    style: {\n      margin: \"10px 5px\",\n      width: \"60px\"\n    }\n  }, getDayList())), __jsx(FormControl, null, __jsx(InputLabel, {\n    htmlFor: \"age-customized-select\",\n    style: {\n      margin: \"0px 5px\"\n    }\n  }, t('birthDateMonth')), __jsx(Select, {\n    value: birthDateMonth,\n    onChange: e => setBirthDateMonth(e.target.value),\n    style: {\n      margin: \"10px 5px\",\n      width: \"60px\"\n    }\n  }, getMonthList())), __jsx(FormControl, null, __jsx(InputLabel, {\n    htmlFor: \"age-customized-select\",\n    style: {\n      margin: \"0px 5px\"\n    }\n  }, t('birthDateYear')), __jsx(Select, {\n    value: birthDateYear,\n    onChange: e => setBirthDateYear(e.target.value),\n    style: {\n      margin: \"10px 5px\",\n      width: \"100px\"\n    }\n  }, getYearList()))), __jsx(\"div\", null, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      margin: 5\n    },\n    type: \"submit\",\n    disabled: !validationBtnState\n  }, t('validate'))), validationStatus !== 0 ? __jsx(\"div\", null, __jsx(\"p\", null, validationStatus === 201 ? 'success' : validationStatus === 200 ? 'Email already used' : 'an error occured')) : null));\n};\n\nexport default withTranslation('common')(withRouter(ModalConnexion));","map":{"version":3,"sources":["/Users/hugopapier/Documents/jobTriboo/app/components/modalConnexion.js"],"names":["React","useState","FormControl","Input","InputLabel","TextField","Button","Select","MenuItem","Modal","withTranslation","withRouter","useCookies","request","LoginTab","setAppElement","ModalConnexion","t","modalOpen","modalWindowLogin","setModalOpenState","setMWindowLogin","router","storeUserInfo","setLoginState","birthDateDay","setBirthDateDay","birthDateMonth","setBirthDateMonth","birthDateYear","setBirthDateYear","status","setStatus","validationBtnState","setValidationBtnState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","fieldError","setFieldError","validationStatus","setValidationStatus","cookies","setCookies","removeCookies","console","log","getDayList","dayNumber","dateElements","i","push","getMonthList","monthElement","getYearList","yearElement","Date","getFullYear","handleValidation","event","preventDefault","birthDate","res","method","headers","body","data","json","token","e","overlay","backgroundColor","content","opacity","width","margin","target","value"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\nimport { FormControl, Input, InputLabel, TextField, Button, Select, MenuItem } from '@material-ui/core'\nimport Modal from 'react-modal'\nimport { withTranslation } from './i18n'\nimport { withRouter } from 'next/router'\nimport { useCookies } from 'react-cookie'\n\nimport { request } from '../utils/request'\nimport LoginTab from '../store/container/login'\n\nModal.setAppElement(\"#__next\");\n\nconst ModalConnexion = ({ t, modalOpen, modalWindowLogin, setModalOpenState, setMWindowLogin, router, storeUserInfo, setLoginState }) => {\n  /* State */\n  const [birthDateDay, setBirthDateDay] = useState(1);\n  const [birthDateMonth, setBirthDateMonth] = useState(1);\n  const [birthDateYear, setBirthDateYear] = useState(2019);\n  const [status, setStatus] = useState(\"candidate\");\n  const [validationBtnState, setValidationBtnState] = useState(true);\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [fieldError, setFieldError] = useState(false);\n  const [validationStatus, setValidationStatus] = useState(0);\n\n  const [cookies, setCookies, removeCookies] = useCookies();\n  console.log('COOKIES: ', cookies);\n\n  /* Utils function */\n  const getDayList = () => {\n    let dayNumber = 31;\n\n    if (birthDateMonth % 2 === 0 && birthDateMonth != 8)\n      dayNumber = 30;\n    if (birthDateMonth === 2) {\n      if (birthDateYear % 4 === 0) {\n        if (birthDateYear % 100 === 0) {\n          if (birthDateYear % 400 === 0)\n            dayNumber = 29;\n          else\n            dayNumber = 28;\n        }\n        else\n        dayNumber = 29;\n      }\n      dayNumber = 28;\n    }\n\n    if (dayNumber < birthDateDay)\n      setBirthDateDay(dayNumber);\n    \n    let dateElements = [];\n    for(let i = 1; i <= dayNumber; i++)\n      dateElements.push(<MenuItem key={i} value={i}>{i}</MenuItem>);\n    \n    return dateElements;\n  }\n\n  const getMonthList = () => {\n    let monthElement = [];\n\n    for (let i = 1; i <= 12; i++)\n      monthElement.push(<MenuItem key={i} value={i}>{i}</MenuItem>);\n\n    return monthElement;\n  }\n\n  const getYearList = () => {\n    let yearElement = [];\n\n    for (let i = new Date().getFullYear(); i >= 1900; i--)\n      yearElement.push(<MenuItem key={i} value={i}>{i}</MenuItem>);\n\n    return yearElement;\n  }\n\n  const handleValidation = async event => {\n    event.preventDefault();\n    setValidationBtnState(false);\n    \n    if (firstName === '' || lastName === '' || email === '' || password === '') {\n      setFieldError(true);\n      setValidationBtnState(true);\n      return;\n    }\n    else {\n      try {\n  \n        const birthDate = new Date(birthDateYear + \"-\" + birthDateMonth + \"-\" + birthDateDay);\n        \n        // .. Start loading front-end process\n        const res = await request(\n          \"/api/register\",\n          {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: {\n              status,\n              firstName,\n              lastName,\n              email,\n              password,\n              birthDate\n            }\n          }\n        );\n        // .. End loading front-end process\n\n        \n        \n        if (res.status === 201) {\n          const data = await res.json();\n\n          setCookies('token', data.token);\n          storeUserInfo({ firstName, lastName, email, password, birthDate });\n\n          setValidationStatus(201);\n          setValidationBtnState(true);\n          setModalOpenState(false);\n\n          setLoginState(true);\n          router.push('/settings');\n        }\n        else {\n          setValidationStatus(res.status);\n          setEmail('');\n          setValidationBtnState(true);\n        }\n      } catch (e) {\n        console.log(e);\n        setValidationBtnState(true);\n        setValidationStatus(500);\n      }\n    }\n  }\n\n  /* Jsx Rendering */\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={() => setModalOpenState(false)}\n      style={{ overlay: { backgroundColor: \"rgba(0, 0, 0, 0.6)\"}, content: { opacity: \"1\", width: '700px', margin: 'auto' } }}\n    >\n      <Button variant={!modalWindowLogin ? \"outlined\" : \"contained\"} onClick={() => setMWindowLogin(true)} style={{ margin: 5 }} color='primary'>{t('login')}</Button>\n      <Button variant={!modalWindowLogin ? \"contained\" : \"outlined\"} onClick={() => setMWindowLogin(false)} style={{ margin: 5 }} color='primary'>{t('register')}</Button>\n      <hr />\n\n      {\n        modalWindowLogin ?\n        <LoginTab /> :\n        (\n          <form onSubmit={handleValidation}>\n\n            <div>\n              <Button\n                variant={(status !== \"candidate\") ? \"outlined\" : \"contained\"}\n                color=\"secondary\"\n                onClick={() => setStatus(\"candidate\")}\n                style={{ margin: 5}}\n              >\n                {t('candidate')}\n              </Button>\n              <Button\n                variant={(status !== \"recruiter\") ? \"outlined\" : \"contained\"}\n                color=\"secondary\"\n                onClick={() => setStatus(\"recruiter\")}\n                style={{ margin: 5}}\n              >\n                {t('recruiter')}\n              </Button>\n            </div>\n\n            <div>\n              <TextField\n                label={t('firstName')}\n                type=\"text\"\n                name=\"firstName\"\n                variant=\"filled\"\n                style={{ margin: 5}}\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n                error={fieldError && firstName === ''}\n              />\n\n              <TextField\n                label={t('lastName')}\n                type=\"text\"\n                name=\"lastName\"\n                variant=\"filled\"\n                style={{ margin: 5}}\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n                error={fieldError && lastName === ''}\n              />\n            </div>\n\n            <div>\n              <TextField\n                label={t('email')}\n                type=\"email\"\n                name=\"email\"\n                variant=\"filled\"\n                autoComplete=\"email\"\n                style={{ margin: 5}}\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                error={fieldError && email === ''}\n              />\n\n              <TextField\n                label={t('password')}\n                type=\"password\"\n                name=\"password\"\n                variant=\"filled\"\n                value={password}\n                autoComplete=\"new-password\"\n                style={{ margin: 5}}\n                onChange={e => setPassword(e.target.value)}\n                error={fieldError && password === ''}\n              />\n            </div>\n\n            <div style={{ margin: \"5px 0px\"}}> \n              <FormControl>\n                <InputLabel htmlFor=\"age-customized-select\" style={{ margin: \"0px 5px\"}}>{t('birthDateDay')}</InputLabel>\n                <Select\n                  value={birthDateDay}\n                  onChange={e => setBirthDateDay(e.target.value)}\n                  style={{ margin: \"10px 5px\", width: \"60px\"}}\n                >\n                  {getDayList()}\n                </Select>\n              </FormControl>\n\n              <FormControl>\n                <InputLabel htmlFor=\"age-customized-select\" style={{ margin: \"0px 5px\"}}>{t('birthDateMonth')}</InputLabel>\n                <Select\n                  value={birthDateMonth}\n                  onChange={e => setBirthDateMonth(e.target.value)}\n                  style={{ margin: \"10px 5px\", width: \"60px\"}}\n                >\n                  {getMonthList()}\n                </Select>\n              </FormControl>\n\n              <FormControl>\n                <InputLabel htmlFor=\"age-customized-select\" style={{ margin: \"0px 5px\"}}>{t('birthDateYear')}</InputLabel>\n                <Select\n                  value={birthDateYear}\n                  onChange={e => setBirthDateYear(e.target.value)}\n                  style={{ margin: \"10px 5px\", width: \"100px\"}}\n                >\n                  {getYearList()}\n                </Select>\n              </FormControl>\n\n            </div>\n\n            <div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ margin: 5}}\n                type='submit'\n                disabled={!validationBtnState}\n              >\n                {t('validate')}\n              </Button>\n            </div>\n\n            {\n              validationStatus !== 0 ?\n              (<div>\n                { <p>{validationStatus === 201 ? 'success' : validationStatus === 200 ? 'Email already used' : 'an error occured'}</p> }\n              </div>) :\n              null\n            }\n\n          </form>\n        )\n      }\n\n    </Modal>\n  )\n}\n\nexport default withTranslation('common')(withRouter(ModalConnexion));"]},"metadata":{},"sourceType":"module"}