{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from '../store/container/header';\nimport { withTranslation } from '../components/i18n';\nimport { useRouter } from 'next/router';\nimport { checkAuth } from '../utils/auth';\nimport { useEffect } from 'react';\n\nvar Settings = function Settings(_ref) {\n  var isAuthorized = _ref.isAuthorized;\n  var router = useRouter();\n  useEffect(function () {\n    if (!isAuthorized) router.push('/');\n  });\n  return __jsx(\"div\", null, __jsx(Header, {\n    isLoggedIn: isAuthorized\n  }), __jsx(\"h1\", null, \"User Settings\"));\n};\n\nSettings.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var isAuthorized;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return checkAuth(ctx);\n\n          case 2:\n            isAuthorized = _context.sent;\n            return _context.abrupt(\"return\", {\n              isAuthorized: isAuthorized,\n              namespacesRequired: ['common']\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withTranslation('common')(Settings);","map":{"version":3,"sources":["/Users/hugopapier/Documents/jobTriboo/app/pages/settings.js"],"names":["Header","withTranslation","useRouter","checkAuth","useEffect","Settings","isAuthorized","router","push","getInitialProps","ctx","namespacesRequired"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAsB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAErC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEAE,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACE,YAAL,EACEC,MAAM,CAACC,IAAP,CAAY,GAAZ;AACH,GAHQ,CAAT;AAKA,SACE,mBACE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEF;AAApB,IADF,EAEE,kCAFF,CADF;AAMD,CAfD;;AAiBAD,QAAQ,CAACI,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA2B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEP,SAAS,CAACO,GAAD,CADX;;AAAA;AACnBJ,YAAAA,YADmB;AAAA,6CAElB;AACLA,cAAAA,YAAY,EAAZA,YADK;AAELK,cAAAA,kBAAkB,EAAE,CAAC,QAAD;AAFf,aAFkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeV,eAAe,CAAC,QAAD,CAAf,CAA0BI,QAA1B,CAAf","sourcesContent":["import Header from '../store/container/header'\nimport { withTranslation } from '../components/i18n'\nimport { useRouter } from 'next/router'\n\nimport { checkAuth } from '../utils/auth'\nimport { useEffect } from 'react'\n\nconst Settings = ({ isAuthorized }) => {\n\n  const router = useRouter();\n  \n  useEffect(() => {\n    if (!isAuthorized)\n      router.push('/');\n  });\n\n  return (\n    <div>\n      <Header isLoggedIn={isAuthorized} />\n      <h1>User Settings</h1>\n    </div>\n  )\n}\n\nSettings.getInitialProps = async ctx => {\n  const isAuthorized = await checkAuth(ctx);\n  return {\n    isAuthorized,\n    namespacesRequired: ['common']\n  }\n}\n\nexport default withTranslation('common')(Settings);"]},"metadata":{},"sourceType":"module"}