{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { FormControl, Input, InputLabel, Button } from '@material-ui/core';\nimport { request } from '../utils/request';\nimport { withTranslation } from './i18n';\nvar LoginTab = withTranslation('common')(function (_ref) {\n  var t = _ref.t,\n      setLoginState = _ref.setLoginState;\n\n  var _useState = useState(false),\n      errorStatus = _useState[0],\n      setErrorStatus = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(false),\n      connexionBtnStatus = _useState4[0],\n      setConnectionBtnStatus = _useState4[1];\n\n  var _useCookies = useCookies(),\n      _useCookies2 = _slicedToArray(_useCookies, 3),\n      cookies = _useCookies2[0],\n      setCookies = _useCookies2[1],\n      removeCookies = _useCookies2[2];\n\n  var handleConnexion =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setConnectionBtnStatus(true);\n              console.log('SUBMITTED');\n              _context.prev = 3;\n              _context.next = 6;\n              return request('/api/authentication', {\n                method: 'post',\n                body: {\n                  email: email,\n                  password: password\n                },\n                headers: {\n                  'Content-type': 'application/json'\n                }\n              });\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              data = _context.sent;\n\n              if (response.status === 200) {\n                // Set the new cookie.\n                setCookies('token', data.token); // Login user.\n\n                setConnectionBtnStatus(false);\n                setLoginState(true);\n                console.log('PROCESS LOGIN COMPLETE');\n              } else {\n                setConnectionBtnStatus(false);\n                setErrorStatus(response.status);\n              }\n\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](3);\n              setConnectionBtnStatus(false);\n              setErrorStatus(500);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 13]]);\n    }));\n\n    return function handleConnexion(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"form\", {\n    onSubmit: handleConnexion\n  }, __jsx(\"div\", null, __jsx(FormControl, {\n    margin: \"normal\"\n  }, __jsx(InputLabel, {\n    htmlFor: \"email\"\n  }, t('email')), __jsx(Input, {\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    error: errorStatus && email === \"\"\n  })), __jsx(FormControl, {\n    margin: \"normal\"\n  }, __jsx(InputLabel, {\n    htmlFor: \"password\"\n  }, t('password')), __jsx(Input, {\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    type: \"password\",\n    name: \"password\",\n    autoComplete: \"current-password\",\n    error: errorStatus && password === \"\"\n  }))), __jsx(\"div\", null, __jsx(Button, {\n    disabled: connexionBtnStatus,\n    variant: \"outlined\",\n    color: \"secondary\",\n    type: \"submit\"\n  }, t('connection'))), errorStatus === 500 ? 'ERROR OCCURED' : null);\n});\nexport default LoginTab;","map":{"version":3,"sources":["/Users/hugopapier/Documents/jobTriboo/app/components/login.js"],"names":["React","useState","useEffect","useCookies","FormControl","Input","InputLabel","Button","request","withTranslation","LoginTab","t","setLoginState","errorStatus","setErrorStatus","email","setEmail","password","setPassword","connexionBtnStatus","setConnectionBtnStatus","cookies","setCookies","removeCookies","handleConnexion","e","preventDefault","console","log","method","body","headers","response","json","data","status","token","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useCookies } from 'react-cookie'\nimport { FormControl, Input, InputLabel, Button } from '@material-ui/core'\n\nimport { request } from '../utils/request'\nimport { withTranslation } from './i18n'\n\nconst LoginTab = withTranslation('common')(({ t, setLoginState }) =>Â {\n\n  const [errorStatus, setErrorStatus] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [connexionBtnStatus, setConnectionBtnStatus] = useState(false);\n  const [cookies, setCookies, removeCookies] = useCookies();\n\n  const handleConnexion = async e => {\n    e.preventDefault();\n    setConnectionBtnStatus(true);\n\n    console.log('SUBMITTED');\n\n    try {\n      const response = await request('/api/authentication', { method: 'post', body: { email, password }, headers: { 'Content-type': 'application/json' }});\n      const data = await response.json();\n\n\n      if (response.status === 200) {\n        // Set the new cookie.\n        setCookies('token', data.token)\n\n        // Login user.\n        setConnectionBtnStatus(false);\n        setLoginState(true);\n\n        console.log('PROCESS LOGIN COMPLETE')\n      }\n      else {\n        setConnectionBtnStatus(false);\n        setErrorStatus(response.status);\n      }\n\n    } catch (e) {\n      setConnectionBtnStatus(false);\n      setErrorStatus(500);\n    }\n\n  }\n\n  return (\n    <form onSubmit={handleConnexion}>\n      <div>\n        <FormControl margin=\"normal\">\n          <InputLabel htmlFor=\"email\">{t('email')}</InputLabel>\n          <Input\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            type=\"email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            error={errorStatus && email === \"\"}\n          />\n        </FormControl>\n\n        <FormControl margin=\"normal\">\n          <InputLabel htmlFor=\"password\">{t('password')}</InputLabel>\n          <Input\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"current-password\"\n            error={errorStatus && password === \"\"}\n          />\n        </FormControl>\n      </div>\n\n      <div>\n        <Button disabled={connexionBtnStatus} variant='outlined' color='secondary' type=\"submit\">{t('connection')}</Button>\n      </div>\n\n      { errorStatus === 500 ? 'ERROR OCCURED' : null }\n    </form>\n  );\n});\n\n\nexport default LoginTab;"]},"metadata":{},"sourceType":"module"}