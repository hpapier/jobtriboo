{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Header from '../store/container/header';\nimport { withTranslation } from '../components/i18n';\nimport { useRouter } from 'next/router';\nimport { checkAuth } from '../utils/auth';\nimport { useEffect } from 'react';\n\nconst Settings = ({\n  isAuthorized\n}) => {\n  const router = useRouter();\n  useEffect(() => {\n    if (!isAuthorized) router.push('/');\n  });\n  return __jsx(\"div\", null, __jsx(Header, {\n    isLoggedIn: isAuthorized\n  }), __jsx(\"h1\", null, \"User Settings\"));\n};\n\nSettings.getInitialProps = async ctx => {\n  const isAuthorized = await checkAuth(ctx);\n  return {\n    isAuthorized,\n    namespacesRequired: ['common']\n  };\n};\n\nexport default withTranslation('common')(Settings);","map":{"version":3,"sources":["/Users/hugopapier/Documents/jobTriboo/app/pages/settings.js"],"names":["Header","withTranslation","useRouter","checkAuth","useEffect","Settings","isAuthorized","router","push","getInitialProps","ctx","namespacesRequired"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAErC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACE,YAAL,EACEC,MAAM,CAACC,IAAP,CAAY,GAAZ;AACH,GAHQ,CAAT;AAKA,SACE,mBACE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEF;AAApB,IADF,EAEE,kCAFF,CADF;AAMD,CAfD;;AAiBAD,QAAQ,CAACI,eAAT,GAA2B,MAAMC,GAAN,IAAa;AACtC,QAAMJ,YAAY,GAAG,MAAMH,SAAS,CAACO,GAAD,CAApC;AACA,SAAO;AACLJ,IAAAA,YADK;AAELK,IAAAA,kBAAkB,EAAE,CAAC,QAAD;AAFf,GAAP;AAID,CAND;;AAQA,eAAeV,eAAe,CAAC,QAAD,CAAf,CAA0BI,QAA1B,CAAf","sourcesContent":["import Header from '../store/container/header'\nimport { withTranslation } from '../components/i18n'\nimport { useRouter } from 'next/router'\n\nimport { checkAuth } from '../utils/auth'\nimport { useEffect } from 'react'\n\nconst Settings = ({ isAuthorized }) => {\n\n  const router = useRouter();\n  \n  useEffect(() => {\n    if (!isAuthorized)\n      router.push('/');\n  });\n\n  return (\n    <div>\n      <Header isLoggedIn={isAuthorized} />\n      <h1>User Settings</h1>\n    </div>\n  )\n}\n\nSettings.getInitialProps = async ctx => {\n  const isAuthorized = await checkAuth(ctx);\n  return {\n    isAuthorized,\n    namespacesRequired: ['common']\n  }\n}\n\nexport default withTranslation('common')(Settings);"]},"metadata":{},"sourceType":"module"}