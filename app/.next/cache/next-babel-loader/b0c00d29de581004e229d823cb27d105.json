{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { languages } from '../utils/lang';\nimport { i18n } from './i18n';\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\nimport { useCookies } from 'react-cookie';\nconst languageBtnStyle = {\n  width: 80\n};\nconst languageItemStyle = {\n  'selected': {\n    backgroundColor: 'red'\n  }\n};\n\nconst LangBtn = () => {\n  const {\n    0: selectedLanguage,\n    1: setSelectedLanguage\n  } = useState('en');\n  const [cookies, setCookies, removeCookies] = useCookies(['next-i18next']);\n  const prefLang = cookies['next-i18next'] === undefined ? 'en' : cookies['next-i18next'];\n  useEffect(() => {\n    setSelectedLanguage(prefLang);\n  }, []);\n\n  const languagesSwitch = e => {\n    i18n.changeLanguage(e.target.value);\n    setSelectedLanguage(e.target.value);\n  };\n\n  return __jsx(FormControl, {\n    style: languageBtnStyle\n  }, __jsx(Select, {\n    value: selectedLanguage,\n    style: {\n      color: '#fff',\n      textTransform: 'capitalize',\n      height: '60px',\n      minWidth: 50\n    },\n    onChange: languagesSwitch,\n    variant: \"filled\"\n  }, languages.map((item, index) => __jsx(MenuItem, {\n    key: index,\n    value: item\n  }, item))));\n};\n\nexport default LangBtn;","map":{"version":3,"sources":["/Users/hugopapier/Documents/jobTriboo/app/components/language.js"],"names":["React","useState","useEffect","languages","i18n","FormControl","Select","MenuItem","useCookies","languageBtnStyle","width","languageItemStyle","backgroundColor","LangBtn","selectedLanguage","setSelectedLanguage","cookies","setCookies","removeCookies","prefLang","undefined","languagesSwitch","e","changeLanguage","target","value","color","textTransform","height","minWidth","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,mBAA9C;AACA,SAASC,UAAT,QAA2B,cAA3B;AAIA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE;AADgB,CAAzB;AAIA,MAAMC,iBAAiB,GAAG;AACxB,cAAY;AACVC,IAAAA,eAAe,EAAE;AADP;AADY,CAA1B;;AAMA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0Cd,QAAQ,CAAC,IAAD,CAAxD;AAEA,QAAM,CAACe,OAAD,EAAUC,UAAV,EAAsBC,aAAtB,IAAuCV,UAAU,CAAC,CAAC,cAAD,CAAD,CAAvD;AACA,QAAMW,QAAQ,GAAGH,OAAO,CAAC,cAAD,CAAP,KAA4BI,SAA5B,GAAwC,IAAxC,GAA+CJ,OAAO,CAAC,cAAD,CAAvE;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,mBAAmB,CAACI,QAAD,CAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAME,eAAe,GAAGC,CAAC,IAAI;AAC3BlB,IAAAA,IAAI,CAACmB,cAAL,CAAoBD,CAAC,CAACE,MAAF,CAASC,KAA7B;AACAV,IAAAA,mBAAmB,CAACO,CAAC,CAACE,MAAF,CAASC,KAAV,CAAnB;AACD,GAHD;;AAKA,SACE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEhB;AAApB,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAEK,gBADT;AAEE,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,aAAa,EAAE,YAAhC;AAA8CC,MAAAA,MAAM,EAAE,MAAtD;AAA8DC,MAAAA,QAAQ,EAAE;AAAxE,KAFT;AAGE,IAAA,QAAQ,EAAER,eAHZ;AAIE,IAAA,OAAO,EAAC;AAJV,KAMIlB,SAAS,CAAC2B,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAsB,IAAA,KAAK,EAAED;AAA7B,KAAoCA,IAApC,CAA/B,CANJ,CADF,CADF;AAYD,CA3BD;;AA6BA,eAAelB,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { languages } from '../utils/lang'\nimport { i18n } from './i18n'\nimport { FormControl, Select, MenuItem } from '@material-ui/core'\nimport { useCookies } from 'react-cookie'\n\n\n\nconst languageBtnStyle = {\n  width: 80\n}\n\nconst languageItemStyle = {\n  'selected':Â {\n    backgroundColor: 'red'\n  }\n}\n\nconst LangBtn = () => {\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\n\n  const [cookies, setCookies, removeCookies] = useCookies(['next-i18next']);\n  const prefLang = cookies['next-i18next'] === undefined ? 'en' : cookies['next-i18next'];\n\n  useEffect(() => {\n    setSelectedLanguage(prefLang);\n  }, []);\n\n  const languagesSwitch = e => {\n    i18n.changeLanguage(e.target.value);\n    setSelectedLanguage(e.target.value);\n  }\n\n  return (\n    <FormControl style={languageBtnStyle}>\n      <Select\n        value={selectedLanguage}\n        style={{ color: '#fff', textTransform: 'capitalize', height: '60px', minWidth: 50 }}\n        onChange={languagesSwitch}\n        variant=\"filled\"\n      >\n        { languages.map((item, index) => <MenuItem key={index} value={item}>{item}</MenuItem>)}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default LangBtn;"]},"metadata":{},"sourceType":"module"}