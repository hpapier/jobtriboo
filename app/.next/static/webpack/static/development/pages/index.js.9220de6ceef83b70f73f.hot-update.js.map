{"version":3,"file":"static/webpack/static/development/pages/index.js.9220de6ceef83b70f73f.hot-update.js","sources":["webpack:///./components/header.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { withTranslation, i18n } from './i18n'\n\nimport { Button, FormControl, Select, MenuItem, withStyles } from '@material-ui/core'\n\n// import { checkAuth } from '../utils/auth'\nimport ModalConnexion from '../store/container/modalConnexion'\nimport { languages } from '../utils/lang'\nimport { useRouter } from 'next/router'\n\nimport LangBtn from './language'\nimport { useCookies } from 'react-cookie'\n\n\n/* Header style (need to move) */\nconst headerLayoutStyle = {\n  // backgroundColor: '#fb9e91',\n  // backgroundColor: '#90aeff',\n  background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\n  boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\n  width: '100%',\n  height: '60px',\n  display: 'flex',\n  justifyContent: 'space-between'\n}\n\nconst headerBtnStyle = {\n  borderLeft: \"1px solid rgba(0, 0, 0, 0.05)\",\n  margin: \"0px\",\n  borderRadius: 0,\n  height: '100%',\n  color: \"white\",\n  padding: '0px 40px',\n  // backgroundColor: '#87e5da'\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)'\n}\n\nconst headerLogo = {\n  color: '#FFF',\n  width: 300,\n  height: '65px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  fontSize: '2em',\n  textTransform: 'uppercase',\n  fontWeight: '600',\n  // fontStyle: 'italic',\n  textShadow: '2px 2px rgba(0, 0, 0, 0.2)'\n}\n\n/* Component */\nconst HeaderLayout = props => (\n  <div style={headerLayoutStyle}>\n    {props.children}\n  </div>\n);\n\nconst JobTribooLogo = () => {\n  const router = useRouter();\n\n  return (\n    <div\n      style={headerLogo}\n      onClick={() => router.pathname !== '/' ? router.push('/') : null}\n    >\n      JobTriboo\n    </div>\n  );\n}\n\nconst HeaderOnline = ({ t, setLoginState }) => {\n  const [cookies, setCookies, removeCookies] = useCookies();\n  const router = useRouter();\n\n  const handleLogout = () => {\n    console.log('LOGOUT')\n    removeCookies('token');\n    setLoginState(false);\n  }\n\n  return (\n    <HeaderLayout>\n      <div>\n        <JobTribooLogo />\n      </div>\n\n      <div>\n        <LangBtn />\n        <Button style={headerBtnStyle} onClick={() => router.push('/dashboard')}>{t('dashboard')}</Button>\n        <Button style={headerBtnStyle}>{t('settings')}</Button>\n        <Button style={headerBtnStyle} onClick={handleLogout}>{t('logout')}</Button>\n      </div>\n    </HeaderLayout>\n  );\n}\n\nconst HeaderOffline = ({ t }) => {\n  const [modalOpen, setModalOpenState] = useState(false);\n  const [modalWindowLogin, setMWindowLogin] = useState(false);\n\n  const openModalMechanism = (modalWindowState) => {\n    setModalOpenState(true);\n    setMWindowLogin(modalWindowState);\n  }\n\n  return (\n    <HeaderLayout>\n      <div>\n        <JobTribooLogo />\n      </div>\n\n      <div>\n        <LangBtn />\n        <Button\n          style={headerBtnStyle}\n          onClick={() => openModalMechanism(true)}\n        >\n          {t('login')}\n        </Button>\n        <Button\n          style={headerBtnStyle}\n          onClick={() => openModalMechanism(false)}\n        >\n          {t('register')}\n        </Button>\n      </div>\n\n      <ModalConnexion\n        setModalOpenState={setModalOpenState}\n        setMWindowLogin={setMWindowLogin}\n        modalWindowLogin={modalWindowLogin}\n        modalOpen={modalOpen}\n      />\n    </HeaderLayout>\n  )\n};\n\nconst Header = ({ isLoggedIn, t, setLoginState, loginState }) => {\n  const [cookies] = useCookies();\n  const router = useRouter();\n\n  useEffect(() => {\n\n    if (isLoggedIn !== undefined && cookies.token === undefined) {\n      setLoginState(false);\n      if (router.pathname === '/settings')\n        router.push('/');\n    }\n    else if (isLoggedIn !== undefined && !loginState) {\n      setLoginState(isLoggedIn);\n      if (!isLoggedIn && router.pathname === '/settings')\n        router.push('/');\n    }\n\n    console.log(isLoggedIn, loginState)\n  });\n\n  return (loginState ? <HeaderOnline t={t} setLoginState={setLoginState} /> : <HeaderOffline t={t} />);\n}\n\nexport default withTranslation('common')(Header);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAfA;AACA;AAcA;AAAA;AACA;AAAA;AADA;AACA;AAKA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAFA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AAAA;AAAA;AAFA;AAOA;AACA;AAAA;AAAA;AAFA;AASA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}